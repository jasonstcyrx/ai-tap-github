
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "GitHub Actions Secrets API",
  "description": "REST API endpoints for managing secrets in GitHub Actions",
  "type": "object",
  "properties": {
    "listOrganizationSecrets": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for listing organization secrets",
          "value": "/orgs/{org}/actions/secrets"
        },
        "method": {
          "type": "string",
          "enum": ["GET"],
          "description": "HTTP method for listing organization secrets"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "queryParameters": {
          "type": "object",
          "properties": {
            "per_page": {
              "type": "integer",
              "description": "The number of results per page"
            },
            "page": {
              "type": "integer",
              "description": "The page number of results to fetch"
            }
          }
        },
        "response": {
          "type": "object",
          "properties": {
            "total_count": {
              "type": "integer",
              "description": "The total number of secrets"
            },
            "secrets": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the secret"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "The time when the secret was created"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "The time when the secret was last updated"
                  },
                  "visibility": {
                    "type": "string",
                    "description": "The visibility of the secret"
                  },
                  "selected_repositories_url": {
                    "type": "string",
                    "description": "The URL to get selected repositories for the secret"
                  }
                },
                "required": ["name", "created_at", "updated_at", "visibility"]
              }
            }
          },
          "required": ["total_count", "secrets"]
        }
      },
      "required": ["endpoint", "method", "headers", "response"]
    },
    "getOrganizationPublicKey": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for getting an organization's public key",
          "value": "/orgs/{org}/actions/secrets/public-key"
        },
        "method": {
          "type": "string",
          "enum": ["GET"],
          "description": "HTTP method for getting the public key"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "response": {
          "type": "object",
          "properties": {
            "key_id": {
              "type": "string",
              "description": "The ID of the public key"
            },
            "key": {
              "type": "string",
              "description": "The public key value"
            }
          },
          "required": ["key_id", "key"]
        }
      },
      "required": ["endpoint", "method", "headers", "response"]
    },
    "getOrganizationSecret": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for getting an organization secret",
          "value": "/orgs/{org}/actions/secrets/{secret_name}"
        },
        "method": {
          "type": "string",
          "enum": ["GET"],
          "description": "HTTP method for getting the secret"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "response": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the secret"
            },
            "created_at": {
              "type": "string",
              "description": "The time when the secret was created"
            },
            "updated_at": {
              "type": "string",
              "description": "The time when the secret was last updated"
            },
            "visibility": {
              "type": "string",
              "description": "The visibility of the secret"
            },
            "selected_repositories_url": {
              "type": "string",
              "description": "The URL to get selected repositories for the secret"
            }
          },
          "required": ["name", "created_at", "updated_at", "visibility"]
        }
      },
      "required": ["endpoint", "method", "headers", "response"]
    },
    "createOrUpdateOrganizationSecret": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for creating or updating an organization secret",
          "value": "/orgs/{org}/actions/secrets/{secret_name}"
        },
        "method": {
          "type": "string",
          "enum": ["PUT"],
          "description": "HTTP method for creating or updating the secret"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "body": {
          "type": "object",
          "properties": {
            "encrypted_value": {
              "type": "string",
              "description": "The encrypted value of the secret"
            },
            "key_id": {
              "type": "string",
              "description": "The ID of the key used to encrypt the secret"
            },
            "visibility": {
              "type": "string",
              "description": "The visibility of the secret"
            },
            "selected_repository_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "The IDs of repositories that can access the secret"
            }
          },
          "required": ["encrypted_value", "key_id"]
        },
        "response": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      "required": ["endpoint", "method", "headers", "body", "response"]
    },
    "deleteOrganizationSecret": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for deleting an organization secret",
          "value": "/orgs/{org}/actions/secrets/{secret_name}"
        },
        "method": {
          "type": "string",
          "enum": ["DELETE"],
          "description": "HTTP method for deleting the secret"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "response": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      "required": ["endpoint", "method", "headers", "response"]
    },
    "listSelectedReposForOrgSecret": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for listing selected repositories for an organization secret",
          "value": "/orgs/{org}/actions/secrets/{secret_name}/repositories"
        },
        "method": {
          "type": "string",
          "enum": ["GET"],
          "description": "HTTP method for listing selected repositories"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "queryParameters": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "description": "The page number of results to fetch"
            },
            "per_page": {
              "type": "integer",
              "description": "The number of results per page"
            }
          }
        },
        "response": {
          "type": "object",
          "properties": {
            "total_count": {
              "type": "integer",
              "description": "The total number of selected repositories"
            },
            "repositories": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The ID of the repository"
                  },
                  // other repository properties
                },
                "required": ["id"]
              }
            }
          },
          "required": ["total_count", "repositories"]
        }
      },
      "required": ["endpoint", "method", "headers", "queryParameters", "response"]
    },
    "setSelectedReposForOrgSecret": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for setting selected repositories for an organization secret",
          "value": "/orgs/{org}/actions/secrets/{secret_name}/repositories"
        },
        "method": {
          "type": "string",
          "enum": ["PUT"],
          "description": "HTTP method for setting selected repositories"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "body": {
          "type": "object",
          "properties": {
            "selected_repository_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "The IDs of repositories to set as selected"
            }
          },
          "required": ["selected_repository_ids"]
        },
        "response": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      "required": ["endpoint", "method", "headers", "body", "response"]
    },
    "addSelectedRepoToOrgSecret": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for adding a selected repository to an organization secret",
          "value": "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
        },
        "method": {
          "type": "string",
          "enum": ["PUT"],
          "description": "HTTP method for adding a selected repository"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "response": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      "required": ["endpoint", "method", "headers", "response"]
    },
    "removeSelectedRepoFromOrgSecret": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for removing a selected repository from an organization secret",
          "value": "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
        },
        "method": {
          "type": "string",
          "enum": ["DELETE"],
          "description": "HTTP method for removing a selected repository"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "response": {
          "type": "object",
          "properties": {},
          "required": []
        }
      },
      "required": ["endpoint", "method", "headers", "response"]
    },
    "listRepoOrgSecrets": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for listing organization secrets available to a repository",
          "value": "/repos/{owner}/{repo}/actions/organization-secrets"
        },
        "method": {
          "type": "string",
          "enum": ["GET"],
          "description": "HTTP method for listing organization secrets"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "queryParameters": {
          "type": "object",
          "properties": {
            "per_page": {
              "type": "integer",
              "description": "The number of results per page"
            },
            "page": {
              "type": "integer",
              "description": "The page number of results to fetch"
            }
          }
        },
        "response": {
          "type": "object",
          "properties": {
            "total_count": {
              "type": "integer",
              "description": "The total number of secrets"
            },
            "secrets": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the secret"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "The time when the secret was created"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "The time when the secret was last updated"
                  }
                },
                "required": ["name", "created_at", "updated_at"]
              }
            }
          },
          "required": ["total_count", "secrets"]
        }
      },
      "required": ["endpoint", "method", "headers", "queryParameters", "response"]
    },
    "listRepoSecrets": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "API endpoint for listing secrets in a repository",
          "value": "/repos/{owner}/{repo}/actions/secrets"
        },
        "method": {
          "type": "string",
          "enum": ["GET"],
          "description": "HTTP method for listing repository secrets"
        },
        "headers": {
          "type": "object",
          "properties": {
            "Authorization": {
              "type": "string",
              "description": "Bearer token for authentication"
            }
          },
          "required": ["Authorization"]
        },
        "queryParameters": {
          "type": "object",
          "properties": {
            "per_page": {
              "type": "integer",
              "description": "The number of results per page"
            },
            "page": {
              "type": "integer",
              "description": "The page number of results to fetch"
            }
          